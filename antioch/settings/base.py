"""
Django settings for antioch project.

Generated by 'django-admin startproject' using Django 1.11.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import sys
from datetime import timedelta

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '33y^@5n5_e21jc3x#3tokk#g@d60s*&sjpck7l6w&gqvj160bb'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

TEST_RUNNER = 'django_nose.NoseTestSuiteRunner'

ALLOWED_HOSTS = ['localhost', 'webapp']

LOGIN_URL = "/login/"
LOGIN_REDIRECT_URL = "/"
SITE_ID = 1

# antioch additions
JOB_TIMEOUT = 5

# 3rd-party app config

REGISTRATION_OPEN = False
ACCOUNT_ACTIVATION_DAYS = 7

CELERY_TASK_ALWAYS_EAGER = True
CELERY_RESULT_EXPIRES = 18000  # 5 hours.
CELERY_ACCEPT_CONTENT = ['json', 'msgpack', 'yaml']
CELERY_BROKER_TRANSPORT_OPTIONS = {
    'fanout_prefix': True, 
    'fanout_patterns': True
}
USER_QUEUE = 'antioch-user'

CELERY_BEAT_SCHEDULE = {
    # 'sync-every-15-mins': {
    #     'task': 'antioch.core.tasks.sync',
    #     'schedule': timedelta(minutes=15),
    #     'args': ()
    # }
}

CELERY_TIMEZONE = 'UTC'

# Application definition

INSTALLED_APPS = [
    # 'autocomplete_light',
    # 'django_admin_bootstrapped',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.admindocs',
    'bootstrap3',
    'storages',
    'widget_tweaks',
    'django_extensions',
    'django_nose',
    'registration',
    'antioch.common',
    'antioch.core',
    'antioch.client',
    'antioch.plugins.ask',
    'antioch.plugins.editors',
    'antioch.plugins.signup'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'antioch.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages'
            ],
        },
    },
]

WSGI_APPLICATION = 'antioch.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME": "antioch",
        "HOST": "localhost",
        "USER": "antioch",
        "PASSWORD": "antioch"
    }
}

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache'
    }
}

AUTHENTICATION_BACKENDS = [
    'antioch.core.auth.AntiochObjectBackend'
]

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
CELERY_WORKER_LOG_FORMAT = "%(asctime)s %(levelname)s %(name)s %(message)s"
CELERY_WORKER_TASK_LOG_FORMAT = "%(asctime)s: %(levelname)s %(name)s %(message)s"
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'formatters': {
        'django.server': {
            '()': 'django.utils.log.ServerFormatter',
            'format': '{server_time} {levelname} {name} {message}',
            'style': '{',
        }
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            #'filters': ['require_debug_true'],
            'formatter': 'django.server',
            'class': 'logging.StreamHandler',
            'stream': sys.stdout
        },
        'django.server': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'django.server',
            'stream': sys.stdout
        },
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        }
    },
    'loggers': {
        'antioch': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True
        },
        'antioch.client.views': {
            'handlers': ['console'],
            'level': 'INFO'
        },
        'celery': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True
        },
        'celery.app.trace': {
            'handlers': ['console'],
            'level': 'DEBUG'
        },
        'celery.bootsteps': {
            'handlers': ['console'],
            'level': 'DEBUG'
        },
        'django': {
            'handlers': ['console', 'mail_admins'],
            'level': 'INFO',
            'propagate': True
        },
        'django.server': {
            'handlers': ['django.server'],
            'level': 'INFO'
        }
    }
}